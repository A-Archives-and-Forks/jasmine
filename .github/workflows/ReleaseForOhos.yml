name: Release for ohos

on:
  workflow_dispatch:

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  RUST_TOOLCHAIN: nightly-2025-02-15

jobs:
  build-core: 
    runs-on: ubuntu-latest
    container: ghcr.io/niuhuan/harmony-next-flutter-pipeline-docker/image:3.7.12-ohos-1.0.6
    steps:
      - name: checkout core
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          repository: 'niuhuan/jasmine-rs-core'
          path: 'native'
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: build-core
        run: |
          apt update
          apt install -y build-essential
          rustup target add aarch64-unknown-linux-ohos
          cargo install ohrs
          export OHOS_NDK_HOME=$OHOS_BASE_SDK_HOME
          cd native/jmbackend/platforms/ohos
          make
          find dist -type f -name "*.so" ! -name "librust" -exec rm -f {} \;
      - name: Upload Build Output
        uses: actions/upload-artifact@v4
        with:
          name: core-build-output
          path: native/jmbackend/platforms/ohos/dist
  build-and-upload--hap:
    needs: build-core
    runs-on: ubuntu-latest
    container: ghcr.io/niuhuan/harmony-next-flutter-pipeline-docker/image:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download Build Output
        uses: actions/download-artifact@v4
        with:
          name: core-build-output
          path: native/jmbackend/platforms/ohos/dist
      - name: rsync
        run: |
          apt update
          apt install -y rsync build-essential pkg-config libssl-dev
          rsync -av --exclude oh-package.json5 native/jmbackend/platforms/ohos/dist/ ohos/entry/libs/
      - name: build hap
        run: |
          sed -i 's/  modal_bottom_sheet: \^3.0.0-pre/  modal_bottom_sheet:\n    git:\n      url: https:\/\/github.com\/niuhuan\/modal_bottom_sheet.git\n      ref: ohos\n      path: modal_bottom_sheet/g' pubspec.yaml
          cp ci/version.code.txt lib/assets/version.txt
          flutter build hap --target-platform=ohos-arm64
          cd ohos
          hvigorw assembleHap --release
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Upload Asset (All)
        if: steps.check_asset.outputs.skip_build != 'true'
        run: |
          export flutter_version=3.22.1
          export TARGET=ohos-arm64
          cd ci
          cargo run --bin upload-asset

